name: Java CI with Maven

on:
  push:
    branches: [ test-ci ]
  pull_request:
    branches: [ test-ci ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: maven

      - name: Build with Maven
        run: mvn clean install

      - name: Run tests
        run: mvn test

      - name: Package JAR
        run: mvn package

      - name: Generate Javadoc
        run: mvn javadoc:javadoc
        continue-on-error: true

      - name: Upload Javadoc
        uses: actions/upload-artifact@v2
        with:
          name: javadoc
          path: target/site/apidocs

      - name: Set up SonarQube Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner.zip -d $HOME
          export PATH=$HOME/sonar-scanner-4.6.2.2472-linux/bin:$PATH

      - name: Run SonarQube analysis
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=your-project-key \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_LOGIN
